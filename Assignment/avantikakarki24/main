"""
ISCG6426 Assignment
pip install --upgrade pyxel
See https://github.com/kitao/pyxel for library
Pyxel Discord: https://discord.gg/jNRYyXn
More examples: https://github.com/kris-classes/pyxel-snippets
"""
import pyxel
import random

class ENQUEUE_BUTTON:
    def __init__(self, x,y,w,h,value,color):
        self.x = x
        self.y = y
        self.w = w
        self.h = h
        self.value = value
        self.color = color

    def draw(self):
        pyxel.rect(self.x,self.y,self.w,self.h,self.color)
        pyxel.text(self.x + 10, self.y +5, self.value, self.color +1)

    def clicked_enqueue(self, mouse_x, mouse_y):
        if self.x <= mouse_x <= self.x + self.w and self.y <= mouse_y <= self.y + self.h:
            print("enqueue")
        else:
            print("not")



class DEQUEUE_BUTTON:
    def __init__(self, x,y,w,h,value,color):
        self.x = x
        self.y = y
        self.w = w
        self.h = h
        self.value = value
        self.color = color

    def draw(self):
        pyxel.rect(self.x,self.y,self.w,self.h,self.color)
        pyxel.text(self.x + 10, self.y +5, self.value, self.color +1)

    def clicked_dequeue(self, mouse_x, mouse_y):
        if self.x <= mouse_x <= self.x + self.w and self.y <= mouse_y <= self.y + self.h:
            print("dequeue")
        else:
            print("not")



class App:
    def __init__(self):
        pyxel.init(250,170, caption="QUEUE DATA STRUCTURE VISUALISATION")
        self.queue = Queue()
        pyxel.mouse(True)



        self.button1 = ENQUEUE_BUTTON(50,40,50,15, "ENQUEUE" , 7)
        self.button2 = DEQUEUE_BUTTON(150,40,50,15, "DEQUEUE" , 7)

        pyxel.run(self.update, self.draw)

    def update(self):
        if pyxel.btnp(pyxel.MOUSE_LEFT_BUTTON):
            if self.button1.clicked_enqueue(pyxel.mouse_x, pyxel.mouse_y):
                self.button1.color = (self.button1.color + 1) % 15
                print('Do the thing for button A')
            if self.button2.clicked_dequeue(pyxel.mouse_x, pyxel.mouse_y):
                self.button2.color = (self.button2.color + 1) % 15
                print('Do the thing for button B')

    def draw(self):
        pyxel.cls(0)

        self.button1.draw()
        self.button2.draw()
        pyxel.text(50, 10, "QUEUE DATA STRUCTURE", pyxel.frame_count % 10)
        pyxel.text(140, 10, "VISUALISATION", pyxel.frame_count % 3)




class Queue:

    def __init__(self):
        self.queue =[]

    def queue_isEmpty(self):
        return self.queue == []

    def queue_isFull(self):
        if len(self.queue) < 6:
            return True
    def enqueue(self,data):
        if data not in self.queue:
            self.queue.insert(0, data)
            return True
        return False

    def dequeue(self):
        data = self.queue[0]
        del self.queue[0]
        return data

    def printQueue(self):
        return self.queue

    def size(self):
        return len(self.queue)

if __name__ == "__main__":
    queue = Queue()
    App()